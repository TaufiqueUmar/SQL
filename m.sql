DECLARE
    CURSOR c_emp IS
        SELECT empno, sal
        FROM emp
        WHERE deptno = 30;
BEGIN
    FOR rec IN c_emp LOOP
        UPDATE emp
        SET sal = rec.sal + (rec.sal * 0.05)
        WHERE empno = rec.empno;
    END LOOP;
    
    COMMIT;
END;
/
 INSERT INTO EMP (EMP_ID, SAL) VALUES (1, 50000);
UPDATE EMP SET SAL = 40000 WHERE EMP_ID = 1;
-- Should fail with ORA-20003: NEW SALARY CANNOT BE LESS THAN OLD SALARY

CREATE OR REPLACE TRIGGER notify_row_delete
BEFORE DELETE ON EMP
FOR EACH ROW
BEGIN
    -- Display a message when a row is deleted
    DBMS_OUTPUT.PUT_LINE('Row with Employee ID: ' || :OLD.EMP_ID || ' is being deleted.');
END;
/

    CREATE OR REPLACE TRIGGER prevent_deletion
BEFORE DELETE ON EMP
FOR EACH ROW
BEGIN
    -- Raise a custom error to prevent row deletion
    RAISE_APPLICATION_ERROR(-20002, 'Error: You cannot delete rows from the EMP table.');
END;
/

DELETE FROM EMP WHERE EMP_ID = 1;
 CREATE OR REPLACE TRIGGER UPDATE_CHECK
BEFORE UPDATE ON EMP
FOR EACH ROW
BEGIN
    IF :NEW.SAL < :OLD.SAL THEN
        RAISE_APPLICATION_ERROR(-20003, 'NEW SALARY CANNOT BE LESS THAN OLD SALARY');
    END IF;
END;
/

CREATE TABLE EMP (
    EMP_ID INT PRIMARY KEY,
    SAL NUMBER
);

INSERT INTO EMP (EMP_ID, SAL) VALUES (1, 50000);
UPDATE EMP SET SAL = 40000 WHERE EMP_ID = 1;
-- Should fail with ORA-20003: NEW SALARY CANNOT BE LESS THAN OLD SALARY
 CREATE OR REPLACE TRIGGER EMP_SUNDAY
BEFORE INSERT OR UPDATE OR DELETE ON EMP
BEGIN
    IF TRIM(UPPER(TO_CHAR(SYSDATE, 'DAY'))) = 'THURSDAY' THEN
        RAISE_APPLICATION_ERROR(-20002, 'NO OPERATION CAN BE PERFORMED ON SUNDAY');
    END IF;
END;
/
    DELETE FROM EMP WHERE EMP_ID = 1;